package crayfis;

option java_package = "edu.uci.crayfis";
option java_outer_classname = "DataProtos";

// A DataChunk just allows us to easily throw a bunch
// of mixed types into the same file/uploadstream/whatever.
message DataChunk {
	repeated RunConfig run_configs = 1;
	repeated ExposureBlock exposure_blocks = 2;
}

message RunConfig {
	optional uint64 id_hi = 1;
	optional uint64 id_lo = 2;
	optional uint64 start_time = 3;
	optional string crayfis_build = 4;
	optional string hw_params = 5;
	optional string os_params = 6;
	optional string camera_params = 7;
}

message ExposureBlock {
	// UUID of the corresponding RunConfig block
	optional uint64 run_id = 1;

	// Info on the time/location of the block
	optional uint64 start_time = 2;
	optional uint64 end_time = 3;
	optional double gps_lat = 4;
	optional double gps_lon = 5;

	enum State {
		INIT = 0;
		CALIBRATION = 1;
		DATA = 2;
	}

	optional State daq_state = 6;

	repeated Event events = 7;

	optional int32 L1_thresh = 8;
	optional int32 L2_thresh = 9;

	optional uint32 L1_processed = 10;
	optional uint32 L2_processed = 11;

	optional uint32 frames_dropped = 12;

	optional uint32 L1_pass = 13;
	optional uint32 L1_skip = 14;

	optional uint32 L2_pass = 15;
	optional uint32 L2_skip = 16;
}

message Event {
	optional uint64 timestamp = 1;
	optional double gps_lat = 2;
	optional double gps_lon = 3;

	repeated Pixel pixels = 4;

	optional double avg = 5;
	optional double std = 6;
}

message Pixel {
	optional uint32 x = 1;
	optional uint32 y = 2;
	optional uint32 val = 3;
	optional uint32 near_max = 4;
	optional float avg_3 = 5;
	optional float avg_5 = 6;
}

